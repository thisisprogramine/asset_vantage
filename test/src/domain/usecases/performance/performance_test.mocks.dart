// Mocks generated by Mockito 5.3.2 from annotations
// in asset_vantage/test/src/domain/usecases/performance/performance_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:asset_vantage/src/domain/entities/app_error.dart' as _i5;
import 'package:asset_vantage/src/domain/entities/performance/performance_grouping_entity.dart'
    as _i6;
import 'package:asset_vantage/src/domain/entities/performance/performance_report_entity.dart'
    as _i13;
import 'package:asset_vantage/src/domain/entities/performance/sort_by_entity.dart'
    as _i9;
import 'package:asset_vantage/src/domain/entities/performance/top_item_entity.dart'
    as _i11;
import 'package:asset_vantage/src/domain/params/no_params.dart' as _i7;
import 'package:asset_vantage/src/domain/params/performance/performance_report_params.dart'
    as _i14;
import 'package:asset_vantage/src/domain/usecases/performance/get_performance_grouping.dart'
    as _i3;
import 'package:asset_vantage/src/domain/usecases/performance/get_performance_report.dart'
    as _i12;
import 'package:asset_vantage/src/domain/usecases/performance/get_performance_sort_by.dart'
    as _i8;
import 'package:asset_vantage/src/domain/usecases/performance/get_performance_top_items.dart'
    as _i10;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetPerformanceGrouping].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPerformanceGrouping extends _i1.Mock
    implements _i3.GetPerformanceGrouping {
  MockGetPerformanceGrouping() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.AppError, _i6.PerformanceGroupingEntity>> call(
          _i7.NoParams? noParams) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [noParams],
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.AppError, _i6.PerformanceGroupingEntity>>.value(
            _FakeEither_0<_i5.AppError, _i6.PerformanceGroupingEntity>(
          this,
          Invocation.method(
            #call,
            [noParams],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.AppError, _i6.PerformanceGroupingEntity>>);
}

/// A class which mocks [GetPerformanceSortBy].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPerformanceSortBy extends _i1.Mock
    implements _i8.GetPerformanceSortBy {
  MockGetPerformanceSortBy() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.AppError, _i9.SortByEntity>> call(
          _i7.NoParams? noParams) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [noParams],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.AppError, _i9.SortByEntity>>.value(
                _FakeEither_0<_i5.AppError, _i9.SortByEntity>(
          this,
          Invocation.method(
            #call,
            [noParams],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.AppError, _i9.SortByEntity>>);
}

/// A class which mocks [GetPerformanceTopItems].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPerformanceTopItems extends _i1.Mock
    implements _i10.GetPerformanceTopItems {
  MockGetPerformanceTopItems() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.AppError, _i11.TopItemEntity>> call(
          _i7.NoParams? noParams) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [noParams],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.AppError, _i11.TopItemEntity>>.value(
                _FakeEither_0<_i5.AppError, _i11.TopItemEntity>(
          this,
          Invocation.method(
            #call,
            [noParams],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.AppError, _i11.TopItemEntity>>);
}

/// A class which mocks [GetPerformanceReport].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPerformanceReport extends _i1.Mock
    implements _i12.GetPerformanceReport {
  MockGetPerformanceReport() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.AppError, _i13.PerformanceReportEntity>> call(
          _i14.PerformanceReportParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.AppError, _i13.PerformanceReportEntity>>.value(
            _FakeEither_0<_i5.AppError, _i13.PerformanceReportEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.AppError, _i13.PerformanceReportEntity>>);
}
