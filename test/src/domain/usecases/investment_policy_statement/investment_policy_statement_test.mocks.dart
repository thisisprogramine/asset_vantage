// Mocks generated by Mockito 5.3.2 from annotations
// in asset_vantage/test/src/domain/usecases/investment_policy_statement/investment_policy_statement_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:asset_vantage/src/domain/entities/app_error.dart' as _i5;
import 'package:asset_vantage/src/domain/entities/investment_policy_statement/investment_policy_statement_grouping_entity.dart'
    as _i6;
import 'package:asset_vantage/src/domain/entities/investment_policy_statement/investment_policy_statement_policies_entity.dart'
    as _i9;
import 'package:asset_vantage/src/domain/entities/investment_policy_statement/investment_policy_statement_report_entity.dart'
    as _i17;
import 'package:asset_vantage/src/domain/entities/investment_policy_statement/investment_policy_statement_sub_grouping_entity.dart'
    as _i11;
import 'package:asset_vantage/src/domain/entities/investment_policy_statement/investment_policy_statement_time_period_entity.dart'
    as _i14;
import 'package:asset_vantage/src/domain/params/investment_policy_statement/investment_policy_statement_report_params.dart'
    as _i18;
import 'package:asset_vantage/src/domain/params/investment_policy_statement/investment_policy_statement_sub_grouping_params.dart'
    as _i12;
import 'package:asset_vantage/src/domain/params/investment_policy_statement/investment_policy_statement_time_period_params.dart'
    as _i15;
import 'package:asset_vantage/src/domain/params/no_params.dart' as _i7;
import 'package:asset_vantage/src/domain/usecases/investment_policy_statement/get_investment_policy_statement_grouping.dart'
    as _i3;
import 'package:asset_vantage/src/domain/usecases/investment_policy_statement/get_investment_policy_statement_policies.dart'
    as _i8;
import 'package:asset_vantage/src/domain/usecases/investment_policy_statement/get_investment_policy_statement_report.dart'
    as _i16;
import 'package:asset_vantage/src/domain/usecases/investment_policy_statement/get_investment_policy_statement_sub_grouping.dart'
    as _i10;
import 'package:asset_vantage/src/domain/usecases/investment_policy_statement/get_investment_policy_statement_time_period.dart'
    as _i13;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetInvestmentPolicyStatementGrouping].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetInvestmentPolicyStatementGrouping extends _i1.Mock
    implements _i3.GetInvestmentPolicyStatementGrouping {
  MockGetInvestmentPolicyStatementGrouping() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<
          _i2.Either<_i5.AppError, _i6.InvestmentPolicyStatementGroupingEntity>>
      call(_i7.NoParams? noParams) => (super.noSuchMethod(
            Invocation.method(
              #call,
              [noParams],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.AppError,
                        _i6.InvestmentPolicyStatementGroupingEntity>>.value(
                _FakeEither_0<_i5.AppError,
                    _i6.InvestmentPolicyStatementGroupingEntity>(
              this,
              Invocation.method(
                #call,
                [noParams],
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i5.AppError,
                  _i6.InvestmentPolicyStatementGroupingEntity>>);
}

/// A class which mocks [GetInvestmentPolicyStatementPolicies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetInvestmentPolicyStatementPolicies extends _i1.Mock
    implements _i8.GetInvestmentPolicyStatementPolicies {
  MockGetInvestmentPolicyStatementPolicies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<
          _i2.Either<_i5.AppError, _i9.InvestmentPolicyStatementPoliciesEntity>>
      call(_i7.NoParams? params) => (super.noSuchMethod(
            Invocation.method(
              #call,
              [params],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.AppError,
                        _i9.InvestmentPolicyStatementPoliciesEntity>>.value(
                _FakeEither_0<_i5.AppError,
                    _i9.InvestmentPolicyStatementPoliciesEntity>(
              this,
              Invocation.method(
                #call,
                [params],
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i5.AppError,
                  _i9.InvestmentPolicyStatementPoliciesEntity>>);
}

/// A class which mocks [GetInvestmentPolicyStatementSubGrouping].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetInvestmentPolicyStatementSubGrouping extends _i1.Mock
    implements _i10.GetInvestmentPolicyStatementSubGrouping {
  MockGetInvestmentPolicyStatementSubGrouping() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<
          _i2.Either<_i5.AppError,
              _i11.InvestmentPolicyStatementSubGroupingEntity>>
      call(_i12.InvestmentPolicyStatementSubGroupingParams? params) =>
          (super.noSuchMethod(
            Invocation.method(
              #call,
              [params],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.AppError,
                        _i11.InvestmentPolicyStatementSubGroupingEntity>>.value(
                _FakeEither_0<_i5.AppError,
                    _i11.InvestmentPolicyStatementSubGroupingEntity>(
              this,
              Invocation.method(
                #call,
                [params],
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i5.AppError,
                  _i11.InvestmentPolicyStatementSubGroupingEntity>>);
}

/// A class which mocks [GetInvestmentPolicyStatementTimePeriod].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetInvestmentPolicyStatementTimePeriod extends _i1.Mock
    implements _i13.GetInvestmentPolicyStatementTimePeriod {
  MockGetInvestmentPolicyStatementTimePeriod() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<
          _i2.Either<_i5.AppError,
              _i14.InvestmentPolicyStatementTimePeriodEntity>>
      call(_i15.InvestmentPolicyStatementTimePeriodParams? params) =>
          (super.noSuchMethod(
            Invocation.method(
              #call,
              [params],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.AppError,
                        _i14.InvestmentPolicyStatementTimePeriodEntity>>.value(
                _FakeEither_0<_i5.AppError,
                    _i14.InvestmentPolicyStatementTimePeriodEntity>(
              this,
              Invocation.method(
                #call,
                [params],
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i5.AppError,
                  _i14.InvestmentPolicyStatementTimePeriodEntity>>);
}

/// A class which mocks [GetInvestmentPolicyStatementReport].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetInvestmentPolicyStatementReport extends _i1.Mock
    implements _i16.GetInvestmentPolicyStatementReport {
  MockGetInvestmentPolicyStatementReport() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<
          _i2.Either<_i5.AppError, _i17.InvestmentPolicyStatementReportEntity>>
      call(_i18.InvestmentPolicyStatementReportParams? params) =>
          (super.noSuchMethod(
            Invocation.method(
              #call,
              [params],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.AppError,
                        _i17.InvestmentPolicyStatementReportEntity>>.value(
                _FakeEither_0<_i5.AppError,
                    _i17.InvestmentPolicyStatementReportEntity>(
              this,
              Invocation.method(
                #call,
                [params],
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i5.AppError,
                  _i17.InvestmentPolicyStatementReportEntity>>);
}
